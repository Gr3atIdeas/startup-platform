# Generated by Django 5.1.6 on 2025-04-02 09:45

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actions',
            fields=[
                ('action_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'actions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('details', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'activity_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChatConversations',
            fields=[
                ('conversation_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'chat_conversations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChatParticipants',
            fields=[
                ('participant_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'chat_participants',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Directions',
            fields=[
                ('direction_id', models.AutoField(primary_key=True, serialize=False)),
                ('direction_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'directions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EntityTypes',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'entity_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FileStorage',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False)),
                ('entity_id', models.IntegerField(blank=True, null=True)),
                ('file_url', models.CharField(blank=True, max_length=1000, null=True)),
                ('uploaded_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'file_storage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FileTypes',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'file_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InvestmentTransactions',
            fields=[
                ('transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=4, max_digits=19)),
                ('is_micro', models.BooleanField(blank=True, null=True)),
                ('payment_gateway_response', models.JSONField(blank=True, null=True)),
                ('transaction_status', models.CharField(blank=True, max_length=50, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'investment_transactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LegalPages',
            fields=[
                ('page_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('version', models.CharField(blank=True, max_length=50, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'legal_pages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False)),
                ('message_text', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'messages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessageStatuses',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('status_name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'message_statuses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModeratorReviews',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False)),
                ('comments', models.TextField(blank=True, null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'moderator_reviews',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NewsArticles',
            fields=[
                ('article_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'news_articles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('notification_id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'notifications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationTypes',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'notification_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentMethods',
            fields=[
                ('method_id', models.AutoField(primary_key=True, serialize=False)),
                ('method_name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'payment_methods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlanetCustomizations',
            fields=[
                ('customization_id', models.AutoField(primary_key=True, serialize=False)),
                ('top_part', models.CharField(blank=True, max_length=100, null=True)),
                ('middle_part', models.CharField(blank=True, max_length=100, null=True)),
                ('bottom_part', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'planet_customizations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReviewStatuses',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('status_name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'review_statuses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Startups',
            fields=[
                ('startup_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('funding_goal', models.DecimalField(blank=True, decimal_places=4, max_digits=19, null=True)),
                ('amount_raised', models.DecimalField(blank=True, decimal_places=4, max_digits=19, null=True)),
                ('valuation', models.DecimalField(blank=True, decimal_places=4, max_digits=19, null=True)),
                ('pitch_deck_url', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('planet_top_color', models.CharField(default='#FFFFFF', max_length=7)),
                ('planet_middle_color', models.CharField(default='#FFFFFF', max_length=7)),
                ('planet_bottom_color', models.CharField(default='#FFFFFF', max_length=7)),
                ('status', models.CharField(default='pending', max_length=20)),
                ('only_invest', models.BooleanField(default=False)),
                ('only_buy', models.BooleanField(default=False)),
                ('both_mode', models.BooleanField(default=False)),
                ('total_invested', models.DecimalField(blank=True, decimal_places=4, default=0, max_digits=19, null=True)),
                ('info_url', models.CharField(blank=True, max_length=255, null=True)),
                ('percent_amount', models.DecimalField(blank=True, decimal_places=4, max_digits=19, null=True)),
                ('customization_data', models.JSONField(blank=True, null=True)),
                ('micro_investment_available', models.BooleanField(default=False)),
                ('total_voters', models.IntegerField(default=0)),
                ('sum_votes', models.IntegerField(default=0)),
                ('is_edited', models.BooleanField(default=False)),
                ('moderator_comment', models.TextField(blank=True, null=True)),
                ('for_sale', models.BooleanField(default=False)),
                ('step_number', models.IntegerField(default=1)),
                ('logo_urls', models.JSONField(default=list)),
                ('creatives_urls', models.JSONField(blank=True, default=list, null=True)),
                ('proofs_urls', models.JSONField(blank=True, default=list, null=True)),
                ('video_urls', models.JSONField(blank=True, default=list, null=True)),
            ],
            options={
                'db_table': 'startups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StartupStages',
            fields=[
                ('stage_id', models.AutoField(primary_key=True, serialize=False)),
                ('stage_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'startup_stages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StartupTimeline',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('event_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'startup_timeline',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StartupVotes',
            fields=[
                ('vote_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'startup_votes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subscriptions',
            fields=[
                ('subscription_id', models.AutoField(primary_key=True, serialize=False)),
                ('plan_name', models.CharField(max_length=100)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('amount', models.DecimalField(decimal_places=4, max_digits=19)),
                ('renewal_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'subscriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionTypes',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'transaction_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserInterests',
            fields=[
                ('interest_id', models.AutoField(primary_key=True, serialize=False)),
                ('interest_type', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_interests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('setting_id', models.AutoField(primary_key=True, serialize=False)),
                ('setting_key', models.CharField(max_length=100)),
                ('setting_value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'user_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserStatuses',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('status_name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'user_statuses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VoteTypes',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'vote_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('password_hash', models.CharField(max_length=255)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('profile_picture_url', models.CharField(blank=True, max_length=255, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('role', models.ForeignKey(blank=True, db_column='role_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.roles')),
                ('status', models.ForeignKey(blank=True, db_column='status_id', default=1, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='accounts.userstatuses')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='UserVotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('startup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.startups')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'startup')},
            },
        ),
    ]
