document.addEventListener('DOMContentLoaded', function() {
    let clickCount = 0;
    let lastClickTime = 0;
    const CLICK_TIMEOUT = 3000;
    const REQUIRED_CLICKS = 10;

    const copyrightElement = document.querySelector('.footer-copyright-text');

    if (copyrightElement) {
        copyrightElement.addEventListener('click', function(e) {
            const currentTime = Date.now();

            if (currentTime - lastClickTime > CLICK_TIMEOUT) {
                clickCount = 0;
            }

            clickCount++;
            lastClickTime = currentTime;

            console.log(`–ö–ª–∏–∫ ${clickCount}/${REQUIRED_CLICKS}`);

            if (clickCount >= REQUIRED_CLICKS) {
                showVideoEasterEgg();
                clickCount = 0;
            }
        });
    }

    function showVideoEasterEgg() {
        const modal = document.createElement('div');
        modal.className = 'easter-egg-modal';
        modal.innerHTML = `
            <div class="easter-egg-overlay">
                <div class="easter-egg-content">
                    <div class="easter-egg-header">
                        <h3>üéâ –ü–∞—Å—Ö–∞–ª–∫–∞ –Ω–∞–π–¥–µ–Ω–∞!</h3>
                        <button class="easter-egg-close" onclick="closeVideoEasterEgg()">√ó</button>
                    </div>
                    <div class="easter-egg-video-container">
                        <video id="easter-egg-video" controls>
                            <source src="/static/accounts/images/0-0.mp4" type="video/mp4">
                            –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ.
                        </video>
                    </div>
                </div>
            </div>
        `;

        document.body.appendChild(modal);

        if (typeof Plyr !== 'undefined') {
            const player = new Plyr('#easter-egg-video', {
            controls: ['play', 'progress', 'current-time', 'duration', 'mute', 'volume', 'fullscreen'],
            autoplay: true,
            i18n: {
                restart: '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å',
                rewind: '–ü–µ—Ä–µ–º–æ—Ç–∞—Ç—å {seektime}—Å',
                play: '–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏',
                pause: '–ü–∞—É–∑–∞',
                fastForward: '–í–ø–µ—Ä–µ–¥ {seektime}—Å',
                seek: '–ò—Å–∫–∞—Ç—å',
                seekLabel: '{currentTime} –∏–∑ {duration}',
                played: '–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ',
                buffered: '–ë—É—Ñ–µ—Ä–∏–∑–æ–≤–∞–Ω–æ',
                currentTime: '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è',
                duration: '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
                volume: '–ì—Ä–æ–º–∫–æ—Å—Ç—å',
                mute: '–í—ã–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫',
                unmute: '–í–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫',
                enableCaptions: '–í–∫–ª—é—á–∏—Ç—å —Å—É–±—Ç–∏—Ç—Ä—ã',
                disableCaptions: '–í—ã–∫–ª—é—á–∏—Ç—å —Å—É–±—Ç–∏—Ç—Ä—ã',
                download: '–°–∫–∞—á–∞—Ç—å',
                enterFullscreen: '–í–æ –≤–µ—Å—å —ç–∫—Ä–∞–Ω',
                exitFullscreen: '–í—ã–π—Ç–∏ –∏–∑ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞',
                frameTitle: '–ü–ª–µ–µ—Ä –¥–ª—è {title}',
                captions: '–°—É–±—Ç–∏—Ç—Ä—ã',
                settings: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
                menuBack: '–ù–∞–∑–∞–¥',
                speed: '–°–∫–æ—Ä–æ—Å—Ç—å',
                normal: '–û–±—ã—á–Ω–∞—è',
                quality: '–ö–∞—á–µ—Å—Ç–≤–æ',
                loop: '–ü–æ–≤—Ç–æ—Ä',
                start: '–°—Ç–∞—Ä—Ç',
                end: '–ö–æ–Ω–µ—Ü',
                all: '–í—Å–µ',
                reset: '–°–±—Ä–æ—Å',
                disabled: '–û—Ç–∫–ª—é—á–µ–Ω–æ',
                enabled: '–í–∫–ª—é—á–µ–Ω–æ',
                advertisement: '–†–µ–∫–ª–∞–º–∞',
                qualityBadge: {
                    2160: '4K',
                    1440: 'HD',
                    1080: 'HD',
                    720: 'HD',
                    576: 'SD',
                    480: 'SD',
                },
            },
        });
        } else {
            console.error('Plyr –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
        }



        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeVideoEasterEgg();
            }
        });
    }

    window.closeVideoEasterEgg = function() {
        const modal = document.querySelector('.easter-egg-modal');
        if (modal) {
            const videoElement = document.querySelector('#easter-egg-video');
            if (videoElement && typeof Plyr !== 'undefined') {
                const player = Plyr.get(videoElement);
                if (player) {
                    player.destroy();
                }
            }
            modal.remove();
        }
    };
});